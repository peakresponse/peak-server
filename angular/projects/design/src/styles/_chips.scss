$chip-border-radius: 1rem;
$chip-border-radius-lg: 1.25rem;
$chip-border-radius-sm: 0.75rem;
$chip-border-width: 0.125rem;
$chip-font-family: $btn-font-family;
$chip-font-size: 1rem;
$chip-font-size-lg: 1.25rem;
$chip-font-size-sm: 0.75rem;
$chip-font-weight: $font-weight-semibold;
$chip-line-height: $btn-line-height;
$chip-padding-y: 0.125rem;
$chip-padding-x: 0.75rem;
$chip-padding-y-lg: 0.1875rem;
$chip-padding-x-lg: 1rem;
$chip-padding-y-sm: 0.0625rem;
$chip-padding-x-sm: 0.5rem;
$chip-transition: $btn-transition;
$chip-white-space: $btn-white-space;
$chip-box-shadow: $btn-box-shadow;
$chip-focus-box-shadow: $btn-focus-box-shadow;
$chip-focus-width: $btn-focus-width;
$chip-active-box-shadow: $btn-active-box-shadow;
$chip-disabled-opacity: $btn-disabled-opacity;

.chip {
  // scss-docs-start chip-css-vars
  --#{$prefix}btn-padding-x: #{$chip-padding-x};
  --#{$prefix}btn-padding-y: #{$chip-padding-y};
  --#{$prefix}btn-font-family: #{$chip-font-family};
  @include rfs($chip-font-size, --#{$prefix}btn-font-size);
  --#{$prefix}btn-font-weight: #{$chip-font-weight};
  --#{$prefix}btn-line-height: #{$chip-line-height};
  --#{$prefix}btn-color: #{$body-color};
  --#{$prefix}btn-bg: transparent;
  --#{$prefix}btn-border-width: #{$chip-border-width};
  --#{$prefix}btn-border-color: transparent;
  --#{$prefix}btn-border-radius: #{$chip-border-radius};
  --#{$prefix}btn-hover-border-color: transparent;
  --#{$prefix}btn-box-shadow: #{$chip-box-shadow};
  --#{$prefix}btn-disabled-opacity: #{$chip-disabled-opacity};
  --#{$prefix}btn-focus-box-shadow: 0 0 0 #{$chip-focus-width} rgba(var(--#{$prefix}btn-focus-shadow-rgb), 0.5);
  // scss-docs-end chip-css-vars

  display: inline-block;
  padding: var(--#{$prefix}btn-padding-y) var(--#{$prefix}btn-padding-x);
  font-family: var(--#{$prefix}btn-font-family);
  @include font-size(var(--#{$prefix}btn-font-size));
  font-weight: var(--#{$prefix}btn-font-weight);
  line-height: var(--#{$prefix}btn-line-height);
  color: var(--#{$prefix}btn-color);
  text-align: center;
  text-decoration: if($link-decoration == none, null, none);
  white-space: $chip-white-space;
  vertical-align: middle;
  cursor: if($enable-button-pointers, pointer, null);
  user-select: none;
  border: var(--#{$prefix}btn-border-width) solid var(--#{$prefix}btn-border-color);
  @include border-radius(var(--#{$prefix}btn-border-radius));
  @include gradient-bg(var(--#{$prefix}btn-bg));
  @include box-shadow(var(--#{$prefix}btn-box-shadow));
  @include transition($chip-transition);

  &:hover {
    color: var(--#{$prefix}btn-hover-color);
    text-decoration: if($link-hover-decoration == underline, none, null);
    background-color: var(--#{$prefix}btn-hover-bg);
    border-color: var(--#{$prefix}btn-hover-border-color);
  }

  .chip-check + &:hover {
    // override for the checkbox/radio buttons
    color: var(--#{$prefix}btn-color);
    background-color: var(--#{$prefix}btn-bg);
    border-color: var(--#{$prefix}btn-border-color);
  }

  &:focus-visible {
    color: var(--#{$prefix}btn-hover-color);
    @include gradient-bg(var(--#{$prefix}btn-hover-bg));
    border-color: var(--#{$prefix}btn-hover-border-color);
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }

  .chip-check:focus-visible + & {
    border-color: var(--#{$prefix}btn-hover-border-color);
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }

  .chip-check:checked + &,
  :not(.chip-check) + &:active,
  &:first-child:active,
  &.active,
  &.show {
    color: var(--#{$prefix}btn-active-color);
    background-color: var(--#{$prefix}btn-active-bg);
    // Remove CSS gradients if they're enabled
    background-image: if($enable-gradients, none, null);
    border-color: var(--#{$prefix}btn-active-border-color);
    @include box-shadow(var(--#{$prefix}btn-active-shadow));

    &:focus-visible {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows {
        box-shadow: var(--#{$prefix}btn-active-shadow), var(--#{$prefix}btn-focus-box-shadow);
      } @else {
        box-shadow: var(--#{$prefix}btn-focus-box-shadow);
      }
    }
  }

  &:disabled,
  &.disabled,
  fieldset:disabled & {
    color: var(--#{$prefix}btn-disabled-color);
    pointer-events: none;
    background-color: var(--#{$prefix}btn-disabled-bg);
    background-image: if($enable-gradients, none, null);
    border-color: var(--#{$prefix}btn-disabled-border-color);
    opacity: var(--#{$prefix}btn-disabled-opacity);
    @include box-shadow(none);
  }
}

.chip--primary {
  @include button-variant(
    $brand-primary-500,
    $brand-primary-500,
    white,
    $brand-primary-600,
    $brand-primary-600,
    white,
    $brand-primary-700,
    $brand-primary-700,
    white,
    $base-300,
    $base-300,
    white
  );
}

.chip--danger {
  @include button-variant(
    $brand-secondary-500,
    $brand-secondary-500,
    white,
    $brand-secondary-600,
    $brand-secondary-600,
    white,
    $brand-secondary-800,
    $brand-secondary-800,
    white,
    $brand-secondary-400,
    $brand-secondary-400,
    white
  );
}

.chip--secondary {
  @include button-outline-variant(
    $brand-primary-500,
    $brand-primary-600,
    $brand-primary-100,
    $brand-primary-600,
    $active-color: $brand-primary-900
  );

  &:disabled,
  &.disabled {
    background-color: white;
    border-color: $base-300;
    color: $base-300;
  }
}

.chip--tertiary {
  @include button-variant(
    transparent,
    transparent,
    $brand-primary-500,
    $hover-color: $brand-primary-600,
    $active-color: $brand-primary-900,
    $disabled-color: $base-300
  );
}

.chip--lg {
  @include button-size($chip-padding-y-lg, $chip-padding-x-lg, $chip-font-size-lg, $chip-border-radius-lg);
}

.chip--sm {
  @include button-size($chip-padding-y-sm, $chip-padding-x-sm, $chip-font-size-sm, $chip-border-radius-sm);
}
