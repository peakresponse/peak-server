#!/usr/bin/env bash
set -e

NEMSIS_VERSION=$1
STATE=$2
VERSION=$3

function checkout_version() {
  VER=$1
  if [ ! -d "nemsis/repositories/$STATE/$NEMSIS_VERSION/$VER" ]; then
    git clone -b release-$NEMSIS_VERSION --filter=blob:none --no-checkout https://git.nemsis.org/scm/nes/$STATE.git nemsis/repositories/$STATE/$NEMSIS_VERSION/$VER
    cd nemsis/repositories/$STATE/$NEMSIS_VERSION/$VER
    git sparse-checkout init --cone
    git sparse-checkout set Resources Schematron
    git checkout ${VER:11:40}
    cd ../../../../..
  fi
}

# check if master NEMSIS state repository history has been set up
if [ ! -d "nemsis/repositories/$STATE/$NEMSIS_VERSION/master" ]; then
  # clone without any tree or file data, without initial checkout
  git clone -b release-$NEMSIS_VERSION --filter=blob:none --no-checkout https://git.nemsis.org/scm/nes/$STATE.git nemsis/repositories/$STATE/$NEMSIS_VERSION/master
  cd nemsis/repositories/$STATE/$NEMSIS_VERSION/master
  git sparse-checkout init --cone
  git sparse-checkout set Resources Schematron
  git checkout
  # get the latest version of the data set and schematron
  DS_VERSION=`git log -n 1 --format="%as-%H" Resources/*_StateDataSet.xml`
  SCH_VERSION=`git log -n 1 --format="%as-%H" Schematron/*_EMSDataSet.sch`
  cd ../../../../..
  # checkout those versions
  VERSIONS=( $DS_VERSION $SCH_VERSION )
  for VER in "${VERSIONS[@]}"
  do
    checkout_version $VER
  done
fi

# update master repository
cd nemsis/repositories/$STATE/$NEMSIS_VERSION/master
git pull --ff-only
cd ../../../../..

# checkout specific version if specified
if [ -n "$VERSION" ]; then
  checkout_version $VERSION
fi
